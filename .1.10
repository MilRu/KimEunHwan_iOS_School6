객체지향 프로그래밍 특징

추상화
실재하는 객체를 지정하여 그것을 클래스로 만들때 추상적으로 생각하는부분


캡슐화
객체의 자료와 행위를 하나로 묶고, 실제 구현 내용을 외부에 감추는 것. 캡슐화된 객체의 행위는 외부에서 볼 때는 실제가 아닌 추상적인 것이 되므로 정보 은닉(information hiding) 개념이 지켜진다. 정보 은닉을 통해 다른 객체로부터 접근할 수 있는 것은 메시지 전달을 통해 간접적으로 자료에 접근하지만, 객체 자료에는 직접적으로 접근할 수 없다. 객체지향의 개념. 데이터와 이 데이터를 다루는 방법(method)을 통합한 것으로 정보 은폐의 장점을 가질 수 있다.

은닉화


다형성
다형성 개념이란 어떤 한 요소에 여러 개념을 넣어 놓는 것으로 일반적으로 오버라이딩(같은 이름의 메소드가 여러 클래스에서 다른 기능을 하는 것)이나 오버로딩(같은 이름의 메소드가 인자의 갯수나 자료형에 따라서 다른 기능을 하는 것)을 의미한다. 다형 개념을 통해서 프로그램 안의 객체 간의 관계를 조직적으로 나타낼 수 있다.


상속성
상속은 새로운 클래스가 기존의 클래스의 자료와 연산을 이용할 수 있게 하는 기능이다. 상속을 받는 새로운 클래스를 부클래스, 파생 클래스, 하위 클래스, 자식 클래스라고 하며 새로운 클래스가 상속하는 기존의 클래스를 기반 클래스, 상위 클래스, 부모 클래스라고 한다. 상속을 통해서 기존의 클래스를 상속받은 하위 클래스를 이용해 프로그램의 요구에 맞추어 클래스를 수정할 수 있고 클래스 간의 종속 관계를 형성함으로써 객체를 조직화할 수 있다.
